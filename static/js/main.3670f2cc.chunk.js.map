{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Section","title","children","FeedbackOptions","options","onLeaveFeedback","map","item","className","styled","btnFeedback","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","reduce","value","prevState","Math","round","ReactDOM","render","document","getElementById","module","exports"],"mappings":"sOAeeA,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACtB,OACI,qCACI,6BAAKD,IACJC,M,gBCoBEC,EAvBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAChC,OACI,8BACKD,EAAQE,KAAI,SAAAC,GAAI,OACb,wBACAC,UAAWC,IAAOC,YAClBC,KAAK,SAELC,QAAS,kBAAMP,EAAgBE,IAJ/B,SAMKA,GAHAA,SCYNM,EAnBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,+BACE,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAyBC,EAAzB,WCGWC,EAVM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACI,4BAAIA,KCmDGC,EAjDH,WACV,MAAwBC,mBAAS,GAAjC,mBAAOR,EAAP,KAAaS,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOP,EAAP,KAAgBS,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAON,EAAP,KAAYS,EAAZ,KAmBMC,EAAqB,iBAAM,CAACZ,EAAMC,EAASC,GAAKW,QAAO,SAACV,EAAOV,GAAR,OAAiBU,EAAQV,IAAM,IAK5F,OACE,qCACE,cAAC,EAAD,CAASN,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBG,QALN,CAAC,OAAQ,UAAW,OAKKC,gBAzBtB,SAACuB,GACnB,OAAQA,GACN,IAAK,OACHL,GAAQ,SAACM,GAAD,OAAeA,EAAY,KACnC,MACF,IAAK,UACHL,GAAW,SAACK,GAAD,OAAeA,EAAY,KACtC,MACF,IAAK,MACHJ,GAAO,SAACI,GAAD,OAAeA,EAAY,WAkBpC,cAAC,EAAD,CAAS5B,MAAM,aAAf,SACGyB,IACC,cAAC,EAAD,CACEZ,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOS,IACPR,mBAhBoCY,KAAKC,MAAOjB,EAAOY,IAAwB,OAmBjF,cAAC,EAAD,CAAcN,QAAQ,4BC1ChCY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U,kBCLjDC,EAAOC,QAAU,CAAC,YAAc,wC","file":"static/js/main.3670f2cc.chunk.js","sourcesContent":["import PropTypes from \"prop-types\"\r\n\r\nconst Section = ({ title, children }) => {\r\n    return (\r\n        <>\r\n            <h1>{title}</h1>\r\n            {children}\r\n            </>\r\n    );\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n}\r\n\r\nexport default Section;","import PropTypes from \"prop-types\"\r\nimport styled from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n    return (\r\n        <div>\r\n            {options.map(item =>\r\n                <button\r\n                className={styled.btnFeedback}\r\n                type=\"button\"\r\n                key={item}\r\n                onClick={() => onLeaveFeedback(item) }\r\n                >\r\n                    {item}\r\n            </button>\r\n            )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.arrayOf(PropTypes.string),\r\n    onLeaveFeedback: PropTypes.func,\r\n}\r\n\r\nexport default FeedbackOptions;","import PropTypes from \"prop-types\"\r\n\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage}) => (\r\n  <ul>\r\n    <li>Good: {good}</li>\r\n    <li>Neutral: {neutral}</li>\r\n    <li>Bad: {bad}</li>\r\n    <li>Total: {total}</li>\r\n    <li >Positive feedback: {positivePercentage}%</li>    \r\n  </ul>   \r\n \r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n\r\nexport default Statistics;\r\n\r\n","import PropTypes from \"prop-types\"\r\n\r\nconst Notification = ({ message }) => {\r\n    return (\r\n        <p>{message}</p>\r\n    );\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string,\r\n}\r\n\r\nexport default Notification;","import React, { useState } from \"react\"\nimport Section from \"./components/Section/Section\"\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\"\nimport Statistics from \"./components/Statistics/Statistics\"\nimport Notification from \"./components/Notification/Notification\"\n\nconst App = () => {\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const addFeedback = (value) => {\n    switch (value) {\n      case \"good\":\n        setGood((prevState) => prevState + 1)\n        break\n      case \"neutral\":\n        setNeutral((prevState) => prevState + 1)\n        break\n      case \"bad\":\n        setBad((prevState) => prevState + 1)\n        break\n\n      default:\n        break\n    }\n  }\n\n  const countTotalFeedback = () => [good, neutral, bad].reduce((total, item) => total + item, 0)\n  const countPositiveFeedbackPercentage = () => Math.round((good / countTotalFeedback()) * 100)\n\n  const btnNames = [\"good\", \"neutral\", \"bad\"]\n\n  return (\n    <>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions options={btnNames} onLeaveFeedback={addFeedback} />\n      </Section>\n      <Section title=\"Statistics\">\n        {countTotalFeedback() ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </>\n  )\n}\n\nexport default App\n\n// class App extends Component {\n//   state = {\n//     good: 0,\n//     neutral: 0,\n//     bad: 0,\n//   }\n\n//   addFeedback = (value) => {\n//     this.setState((prevStateState) => ({\n//       [value]: prevStateState[value] + 1,\n//     }))\n//   }\n\n//   countTotalFeedback = () => Object.values(this.state).reduce((total, item) => total + item, 0)\n\n//   countPositiveFeedbackPercentage = () => Math.round((this.state.good / this.countTotalFeedback()) * 100)\n\n//   render() {\n//     const keyNames = Object.keys(this.state)\n//     const { addFeedback, countTotalFeedback, countPositiveFeedbackPercentage } = this\n//     const { good, neutral, bad } = this.state\n\n//     return (\n//       <>\n//         <Section title=\"Please leave feedback\">\n//           <FeedbackOptions options={keyNames} onLeaveFeedback={addFeedback} />\n//         </Section>\n//         <Section title=\"Statistics\">\n//           {countTotalFeedback() ? (\n//             <Statistics\n//               good={good}\n//               neutral={neutral}\n//               bad={bad}\n//               total={countTotalFeedback()}\n//               positivePercentage={countPositiveFeedbackPercentage()}\n//             />\n//           ) : (\n//             <Notification message=\"No feedback given\" />\n//           )}\n//         </Section>\n//       </>\n//     )\n//   }\n// }\n\n// export default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport \"./index.css\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnFeedback\":\"FeedbackOptions_btnFeedback__ib03t\"};"],"sourceRoot":""}