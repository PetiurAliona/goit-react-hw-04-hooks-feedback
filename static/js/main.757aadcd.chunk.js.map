{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Section","title","children","FeedbackOptions","options","onLeaveFeedback","map","item","className","styled","btnFeedback","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","state","addFeedback","value","setState","prevState","countTotalFeedback","Object","values","reduce","countPositiveFeedbackPercentage","Math","round","keyNames","keys","this","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"kQAeeA,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACtB,OACI,qCACI,6BAAKD,IACJC,M,gBCoBEC,EAvBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAChC,OACI,8BACKD,EAAQE,KAAI,SAAAC,GAAI,OACb,wBACAC,UAAWC,IAAOC,YAClBC,KAAK,SAELC,QAAS,kBAAMP,EAAgBE,IAJ/B,SAMKA,GAHAA,SCYNM,EAnBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,+BACE,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAyBC,EAAzB,WCGWC,EAVM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACI,4BAAIA,KC+CGC,E,4MA5CbC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPO,YAAc,SAACC,GACb,EAAKC,UAAS,SAACC,GAAD,sBACXF,EAAQE,EAAUF,GAAS,O,EAIhCG,mBAAqB,kBAAMC,OAAOC,OAAO,EAAKP,OAAOQ,QAAO,SAACb,EAAOV,GAAR,OAAiBU,EAAQV,IAAM,I,EAE3FwB,gCAAkC,kBAAMC,KAAKC,MAAO,EAAKX,MAAMR,KAAO,EAAKa,qBAAwB,M,4CAEnG,WACE,IAAMO,EAAWN,OAAOO,KAAKC,KAAKd,OAC1BC,EAAqEa,KAArEb,YAAaI,EAAwDS,KAAxDT,mBAAoBI,EAAoCK,KAApCL,gCACzC,EAA+BK,KAAKd,MAA5BR,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OACE,qCACE,cAAC,EAAD,CAASf,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBG,QAAS8B,EAAU7B,gBAAiBkB,MAEvD,cAAC,EAAD,CAAStB,MAAM,aAAf,SACG0B,IACC,cAAC,EAAD,CACEb,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOU,IACPT,mBAAoBa,MAGtB,cAAC,EAAD,CAAcX,QAAQ,+B,GArChBiB,aCAlBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U,kBCLjDC,EAAOC,QAAU,CAAC,YAAc,wC","file":"static/js/main.757aadcd.chunk.js","sourcesContent":["import PropTypes from \"prop-types\"\r\n\r\nconst Section = ({ title, children }) => {\r\n    return (\r\n        <>\r\n            <h1>{title}</h1>\r\n            {children}\r\n            </>\r\n    );\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n}\r\n\r\nexport default Section;","import PropTypes from \"prop-types\"\r\nimport styled from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n    return (\r\n        <div>\r\n            {options.map(item =>\r\n                <button\r\n                className={styled.btnFeedback}\r\n                type=\"button\"\r\n                key={item}\r\n                onClick={() => onLeaveFeedback(item) }\r\n                >\r\n                    {item}\r\n            </button>\r\n            )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.arrayOf(PropTypes.string),\r\n    onLeaveFeedback: PropTypes.func,\r\n}\r\n\r\nexport default FeedbackOptions;","import PropTypes from \"prop-types\"\r\n\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage}) => (\r\n  <ul>\r\n    <li>Good: {good}</li>\r\n    <li>Neutral: {neutral}</li>\r\n    <li>Bad: {bad}</li>\r\n    <li>Total: {total}</li>\r\n    <li >Positive feedback: {positivePercentage}%</li>    \r\n  </ul>   \r\n \r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n\r\nexport default Statistics;\r\n\r\n","import PropTypes from \"prop-types\"\r\n\r\nconst Notification = ({ message }) => {\r\n    return (\r\n        <p>{message}</p>\r\n    );\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string,\r\n}\r\n\r\nexport default Notification;","import React, { Component } from \"react\"\nimport Section from \"./components/Section/Section\"\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\"\nimport Statistics from \"./components/Statistics/Statistics\"\nimport Notification from \"./components/Notification/Notification\"\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  }\n\n  addFeedback = (value) => {\n    this.setState((prevState) => ({\n      [value]: prevState[value] + 1,\n    }))\n  }\n\n  countTotalFeedback = () => Object.values(this.state).reduce((total, item) => total + item, 0)\n\n  countPositiveFeedbackPercentage = () => Math.round((this.state.good / this.countTotalFeedback()) * 100)\n\n  render() {\n    const keyNames = Object.keys(this.state)\n    const { addFeedback, countTotalFeedback, countPositiveFeedbackPercentage } = this\n    const { good, neutral, bad } = this.state\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions options={keyNames} onLeaveFeedback={addFeedback} />\n        </Section>\n        <Section title=\"Statistics\">\n          {countTotalFeedback() ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={countTotalFeedback()}\n              positivePercentage={countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    )\n  }\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport \"./index.css\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnFeedback\":\"FeedbackOptions_btnFeedback__ib03t\"};"],"sourceRoot":""}